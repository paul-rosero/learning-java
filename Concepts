Java is a server-side and static type language.

Java is a computer programming language that enforces an Object-Oriented Programming(OOP) model and is platform(Mac, Linux, Windows) INDEPENDENT.

Java code must be compiled before it is run. This means using one command to compile the code and another command to execute/run the code.

Java Program Life Cycle
    Step 1: Create source document using any editor(VSCode) and save file as .java
    
    Step 2: Compile the .java file using "javac" command or eclipse will compile it automatically.

    Step 3: Byte Code(sample.class) will be generated on disk.

    Step 4: this byte code can run on any platform or device having JVM(java.exe convert byte code in machine language)

The 4 Pillars of Java OOP are A-P-I-E. Abstraction, Polymorphism, Inheritance, Encapsulation. 
    Abstraction - 
        is the process of showing only essential/necessary features of an entity/object to the outside world and hide the other irrelevant information. 
    
    Polymorphism - 
        This Java OOP concepts lets programmers use the same word to mean different things in different contexts. Method overriding and overloading are examples of polymorphism. 
        Method Overriding -
            the child class can use the OOP polymorphism concept to override a method of its parent class.
        Method Overloading -
            a single method may perform different functions depending on the context in which it's called. When you have more than 1 method with the same name with different type and/or number of parameters.  
    
    Inheritance -
        It lets programmers create new classes that share some of the attributes of existing classes. It works by letting a new class adopt the properties of another. We call the inheriting class a "subclass" or "child class". The original class is called the "parent class". We use the keyword "extends" to define a new class that inherits properties from an old class.

    Encapsulation -
        The practice of keeping fields within a class private, then providing access to them via public methods. It is used with the word "private" before calling the code. It's a protective barrier that keeps the data and code safe within the class itself. This way we can re-use objects like code components or variables without allowing open access to the data system-wide. For example, we may create a piece of code that calls specific data from a database. It may be useful to reuse that code with other databases or processes. Encapsulation lets us do that while keeping our original data private. It also lets us alter our original code without breaking it for others who have adopted it in the meantime.

Class - 
    It is a blueprint from which individual(instance of) objects are created. The building blocks of Java application, representing things and concepts with which your program operates.
    SuperClass -
        it is the name for the parent class in other programming languages.
    Subclass -
        it is the name for the child class in other programing languages. 

Object - 
    An instance of a class. Every object in java has its own state and behavior. 

Variables - 
    Refers to something that holds a value/data that can change over time. It also holds a specific type of data.
Most Used TYPES OF VARIABLES:
    -String
    -int
    -double
    -boolean

Constants -
    Values/data that must NOT change by using the word Final keyword.

Fields -
    Name where object stores its state.

Methods - 
    It is a function in some programming languages that operate on an object's internal state and serve as the primary mechanism for object-to-object communication.

Interface -
    Is like a class in Java but there are differences between class and interface. Interface is a collection of methods or we can say collection of abstract methods with no implementation. A Class can inherit the interface using the "implements" keyword. In interface we can only declare or give prototype to method we cannot define methods inside the interface. "Interface" keyword is used to create interface in java. It is a group of related methods with empty bodies. 

Package - 
    This is a folder in which the class will be saved, provides a namespace for the class. The folder name(the package) is used to uniquely identify the class.
    Java provides an enormous class library(a set of packages) suitable for use in your own application, called "Application Programming Interface" or "API"
    API -
        This package represents the tasks most commonly associated with general-purpose programming.

Garbage Collection -
    It's code that collects unused objects ad deletes them to free up memory. It's implementation lives inside the Java Virtual Machine(JVM) and the programmer does not need to explicitly mark objects to be deleted. It is an Automatic Process.

Operator Precedence(Rules of Precedence):
    First - Operators within a pair of parentheses

    Second - Increment and decrement operators(++ or --)

    Third - Multiplication and division operators, evaluated from left to right. 

    Fourth - Addition and subtraction operators, evaluated from left to right. 